import { nEgg } from "./n-egg";

const data = [
    [null, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    [4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    [5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    [6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3],
    [7, 7, 4, 3, 3, 3, 3, 3, 3, 3, 3],
    [8, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4],
    [9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4],
    [10, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4],
    [11, 11, 5, 4, 4, 4, 4, 4, 4, 4, 4],
    [12, 12, 5, 4, 4, 4, 4, 4, 4, 4, 4],
    [13, 13, 5, 4, 4, 4, 4, 4, 4, 4, 4],
    [14, 14, 5, 4, 4, 4, 4, 4, 4, 4, 4],
    [15, 15, 5, 5, 4, 4, 4, 4, 4, 4, 4],
    [16, 16, 6, 5, 5, 5, 5, 5, 5, 5, 5],
    [17, 17, 6, 5, 5, 5, 5, 5, 5, 5, 5],
    [18, 18, 6, 5, 5, 5, 5, 5, 5, 5, 5],
    [19, 19, 6, 5, 5, 5, 5, 5, 5, 5, 5],
    [20, 20, 6, 5, 5, 5, 5, 5, 5, 5, 5],
    [21, 21, 6, 5, 5, 5, 5, 5, 5, 5, 5],
    [22, 22, 7, 5, 5, 5, 5, 5, 5, 5, 5],
    [23, 23, 7, 5, 5, 5, 5, 5, 5, 5, 5],
    [24, 24, 7, 5, 5, 5, 5, 5, 5, 5, 5],
    [25, 25, 7, 5, 5, 5, 5, 5, 5, 5, 5],
    [30, 30, 8, 6, 5, 5, 5, 5, 5, 5, 5],
    [35, 35, 8, 6, 6, 6, 6, 6, 6, 6, 6],
    [40, 40, 9, 6, 6, 6, 6, 6, 6, 6, 6],
    [45, 45, 9, 7, 6, 6, 6, 6, 6, 6, 6],
    [50, 50, 10, 7, 6, 6, 6, 6, 6, 6, 6],
    [100, 100, 14, 9, 8, 7, 7, 7, 7, 7, 7],
    [200, 200, 20, 11, 9, 8, 8, 8, 8, 8, 8],
    [300, 300, 24, 13, 10, 9, 9, 9, 9, 9, 9],
    [400, 400, 28, 14, 11, 10, 9, 9, 9, 9, 9],
    [500, 500, 32, 15, 11, 10, 10, 9, 9, 9, 9],
    [1000, 1000, 45, 19, 13, 11, 11, 11, 10, 10, 10],
];

describe("n egg", () => {
    for (let i = 1; i < data.length; i++) {
        for (let j = 1; j < data[0].length; j++) {
            const eggs = data[0][j] as number;
            const floors = data[i][0] as number;
            const expectedValue = data[i][j];
            it(JSON.stringify({ eggs, floors, expectedValue }), () =>
                expect(nEgg(eggs, floors)).toEqual(expectedValue),
            );
        }
    }
});
